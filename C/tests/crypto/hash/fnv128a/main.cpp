#include <trueman/crypto/hash.h>
#include <iostream>

#define TST_assert_eq(x, y) do { \
    if((x) != (y)) { \
        std::cout << "failure:" << std::endl; \
        std::cout << "\t---- " << __FILE__ << ':' << __LINE__; \
        std::cout << " (" << __FUNCTION__ << ") ----" << std::endl; \
        std::cout << "\t left: " << (unsigned)(x) << std::endl; \
        std::cout << "\tright: " << (unsigned)(y) << std::endl; \
        return(-1); \
    } \
} while(0)

static const std::uint8_t TST_req[] = {
    0x0D, 0x7D, 0x88, 0x74,   0x19, 0xCF, 0x27, 0x5A,
    0xFC, 0x51, 0x30, 0x33,   0x39, 0x01, 0x44, 0x5D,
    0xA8, 0xD3, 0xB9, 0x88,   0x78, 0x4C, 0x0A, 0xCF,
    0x40, 0x9B, 0xA0, 0x01,   0x05, 0x14, 0x43, 0x48,
    0x4C, 0x4F, 0x12, 0x00,   0x00, 0x00, 0x50, 0x41,
    0x44, 0x00, 0xE0, 0x03,   0x00, 0x00, 0x53, 0x4E,
    0x49, 0x00, 0xF2, 0x03,   0x00, 0x00, 0x56, 0x45,
    0x52, 0x00, 0xF6, 0x03,   0x00, 0x00, 0x43, 0x43,
    0x53, 0x00, 0x06, 0x04,   0x00, 0x00, 0x4D, 0x53,
    0x50, 0x43, 0x0A, 0x04,   0x00, 0x00, 0x55, 0x41,
    0x49, 0x44, 0x34, 0x04,   0x00, 0x00, 0x54, 0x43,
    0x49, 0x44, 0x38, 0x04,   0x00, 0x00, 0x50, 0x44,
    0x4D, 0x44, 0x3C, 0x04,   0x00, 0x00, 0x53, 0x4D,
    0x48, 0x4C, 0x40, 0x04,   0x00, 0x00, 0x49, 0x43,
    0x53, 0x4C, 0x44, 0x04,   0x00, 0x00, 0x43, 0x54,
    0x49, 0x4D, 0x4C, 0x04,   0x00, 0x00, 0x4E, 0x4F,
    0x4E, 0x50, 0x6C, 0x04,   0x00, 0x00, 0x4D, 0x49,
    0x44, 0x53, 0x70, 0x04,   0x00, 0x00, 0x53, 0x43,
    0x4C, 0x53, 0x74, 0x04,   0x00, 0x00, 0x43, 0x53,
    0x43, 0x54, 0x74, 0x04,   0x00, 0x00, 0x43, 0x4F,
    0x50, 0x54, 0x74, 0x04,   0x00, 0x00, 0x43, 0x46,
    0x43, 0x57, 0x78, 0x04,   0x00, 0x00, 0x53, 0x46,
    0x43, 0x57, 0x7C, 0x04,   0x00, 0x00, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x2D, 0x2D, 0x2D,   0x2D, 0x2D, 0x77, 0x77,
    0x77, 0x2E, 0x67, 0x6F,   0x6F, 0x67, 0x6C, 0x65,
    0x61, 0x70, 0x69, 0x73,   0x2E, 0x63, 0x6F, 0x6D,
    0x51, 0x30, 0x33, 0x39,   0x01, 0xE8, 0x81, 0x60,
    0x92, 0x92, 0x1A, 0xE8,   0x7E, 0xED, 0x80, 0x86,
    0xA2, 0x15, 0x82, 0x91,   0x64, 0x00, 0x00, 0x00,
    0x43, 0x68, 0x72, 0x6F,   0x6D, 0x65, 0x2F, 0x36,
    0x32, 0x2E, 0x30, 0x2E,   0x33, 0x32, 0x30, 0x32,
    0x2E, 0x39, 0x34, 0x20,   0x49, 0x6E, 0x74, 0x65,
    0x6C, 0x20, 0x4D, 0x61,   0x63, 0x20, 0x4F, 0x53,
    0x20, 0x58, 0x20, 0x31,   0x30, 0x5F, 0x31, 0x33,
    0x5F, 0x31, 0x00, 0x00,   0x00, 0x00, 0x58, 0x35,
    0x30, 0x39, 0x01, 0x00,   0x00, 0x00, 0x1E, 0x00,
    0x00, 0x00, 0xC5, 0x66,   0x1D, 0x5A, 0x00, 0x00,
    0x00, 0x00, 0xCE, 0x25,   0x40, 0xA2, 0x0E, 0x2A,
    0xC1, 0xA9, 0xE8, 0x12,   0xE1, 0xF9, 0x70, 0x76,
    0xE3, 0xB5, 0xC4, 0xB4,   0xF4, 0x22, 0x15, 0xC4,
    0x79, 0x23, 0xFC, 0x02,   0xEF, 0xBE, 0x53, 0xF5,
    0xFE, 0xC5, 0x64, 0x00,   0x00, 0x00, 0x01, 0x00,
    0x00, 0x00, 0x00, 0x00,   0xF0, 0x00, 0x00, 0x00,
    0x60, 0x00, 0x00, 0x00,   0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,   0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,   0x00, 0x00
};

static const std::uint8_t TST_rsp[] = {
    0x08, 0x7D, 0x88, 0x74,   0x19, 0xCF, 0x27, 0x5A,
    0xFC, 0x01, 0xA3, 0x71,   0x5C, 0xBB, 0x79, 0xE0,
    0xF8, 0x5E, 0x2C, 0xA7,   0xEC, 0x45, 0x80, 0x01,
    0x52, 0x45, 0x4A, 0x00,   0x08, 0x00, 0x00, 0x00,
    0x53, 0x54, 0x4B, 0x00,   0x38, 0x00, 0x00, 0x00,
    0x53, 0x4E, 0x4F, 0x00,   0x6C, 0x00, 0x00, 0x00,
    0x50, 0x52, 0x4F, 0x46,   0xB2, 0x00, 0x00, 0x00,
    0x53, 0x43, 0x46, 0x47,   0x51, 0x01, 0x00, 0x00,
    0x52, 0x52, 0x45, 0x4A,   0x55, 0x01, 0x00, 0x00,
    0x53, 0x54, 0x54, 0x4C,   0x5D, 0x01, 0x00, 0x00,
    0x43, 0x53, 0x43, 0x54,   0x4F, 0x02, 0x00, 0x00,
    0x43, 0x52, 0x54, 0xFF,   0xFB, 0x07, 0x00, 0x00,
    0xA4, 0x5F, 0xC0, 0x70,   0xE9, 0x82, 0x62, 0xDB,
    0xA4, 0x24, 0x9A, 0x7F,   0x24, 0x2C, 0x7A, 0xB2,
    0xD0, 0xE9, 0xB6, 0x30,   0x80, 0x8B, 0x71, 0x44,
    0x2A, 0xBF, 0xF3, 0x7D,   0x74, 0xBE, 0xF9, 0xC6,
    0x52, 0xF6, 0x2D, 0x66,   0x5E, 0x17, 0x7B, 0x5E,
    0xCE, 0xCA, 0x7E, 0x30,   0x06, 0x73, 0x03, 0xF6,
    0x12, 0x36, 0xC2, 0x84,   0xE2, 0x97, 0x74, 0xBF,
    0x85, 0x0D, 0x34, 0xA2,   0xEE, 0x76, 0x1B, 0x08,
    0x8B, 0x62, 0xB1, 0xCE,   0x28, 0x88, 0x7F, 0x84,
    0x7C, 0x66, 0xD9, 0xB8,   0xC7, 0x1D, 0x50, 0x12,
    0xE3, 0xDD, 0x4F, 0xDA,   0xD8, 0x2A, 0xFC, 0xE4,
    0x9C, 0xA7, 0x87, 0xC5,   0xA6, 0xEA, 0x52, 0x5A,
    0xFC, 0xBB, 0xDB, 0xF8,   0xC3, 0x34, 0x42, 0xE8,
    0xBA, 0xEC, 0x60, 0x29,   0x30, 0x44, 0x02, 0x20,
    0x38, 0x2B, 0x13, 0xED,   0xD5, 0x85, 0xDB, 0xBD,
    0x55, 0xDC, 0x6E, 0x8B,   0x9A, 0x09, 0xE2, 0x93,
    0xC8, 0x55, 0x68, 0xD6,   0xFD, 0x12, 0x68, 0x55,
    0xE2, 0xC6, 0xC6, 0x11,   0x73, 0xF6, 0x29, 0xD4,
    0x02, 0x20, 0x26, 0x59,   0xA2, 0xB2, 0xAC, 0x99,
    0x43, 0x63, 0x1B, 0xB4,   0x8A, 0x01, 0x17, 0x59,
    0x07, 0x9B, 0x08, 0x89,   0xF8, 0x95, 0xAB, 0x2B,
    0xC6, 0xC7, 0x48, 0x39,   0x39, 0x1C, 0x89, 0x24,
    0x46, 0xCB, 0x53, 0x43,   0x46, 0x47, 0x08, 0x00,
    0x00, 0x00, 0x41, 0x45,   0x41, 0x44, 0x08, 0x00,
    0x00, 0x00, 0x53, 0x43,   0x49, 0x44, 0x18, 0x00,
    0x00, 0x00, 0x50, 0x44,   0x4D, 0x44, 0x1C, 0x00,
    0x00, 0x00, 0x54, 0x42,   0x4B, 0x50, 0x20, 0x00,
    0x00, 0x00, 0x50, 0x55,   0x42, 0x53, 0x43, 0x00,
    0x00, 0x00, 0x4B, 0x45,   0x58, 0x53, 0x47, 0x00,
    0x00, 0x00, 0x4F, 0x42,   0x49, 0x54, 0x4F, 0x00,
    0x00, 0x00, 0x45, 0x58,   0x50, 0x59, 0x57, 0x00,
    0x00, 0x00, 0x41, 0x45,   0x53, 0x47, 0x43, 0x43,
    0x32, 0x30, 0xFB, 0xEE,   0x5B, 0x4A, 0x33, 0x26,
    0x1C, 0x03, 0x92, 0x26,   0x69, 0x2A, 0xF1, 0x24,
    0x5D, 0x9F, 0x43, 0x48,   0x49, 0x44, 0x54, 0x42,
    0x31, 0x30, 0x20, 0x00,   0x00, 0x8C, 0xC8, 0x1F,
    0xCC, 0x54, 0x68, 0xF6,   0xAA, 0x9D, 0x11, 0x93,
    0xC3, 0x1E, 0x0F, 0xE2,   0x22, 0xE0, 0x7E, 0x4D,
    0x5F, 0x0E, 0x00, 0x4B,   0xED, 0xA6, 0xE5, 0xDE,
    0x3E, 0x1C, 0x93, 0x12,   0x4C, 0x43, 0x32, 0x35,
    0x35, 0x30, 0x30, 0x30,   0x30, 0x30, 0x30, 0x30,
    0x30, 0xC0, 0xF2, 0x1F,   0x5A, 0x00, 0x00, 0x00,
    0x00, 0x0C, 0x00, 0x00,   0x00, 0xFA, 0x8B, 0x02,
    0x00, 0x00, 0x00, 0x00,   0x00, 0x00, 0xF0, 0x00,
    0x77, 0x00, 0xEE, 0x4B,   0xBD, 0xB7, 0x75, 0xCE,
    0x60, 0xBA, 0xE1, 0x42,   0x69, 0x1F, 0xAB, 0xE1,
    0x9E, 0x66, 0xA3, 0x0F,   0x7E, 0x5F, 0xB0, 0x72,
    0xD8, 0x83, 0x00, 0xC4,   0x7B, 0x89, 0x7A, 0xA8,
    0xFD, 0xCB, 0x00, 0x00,   0x01, 0x5F, 0x9E, 0x6C,
    0x88, 0xB9, 0x00, 0x00,   0x04, 0x03, 0x00, 0x48,
    0x30, 0x46, 0x02, 0x21,   0x00, 0xD9, 0xA0, 0xE2,
    0x30, 0x37, 0x06, 0xA5,   0xEA, 0xF3, 0x49, 0x35,
    0x4F, 0x4D, 0xCF, 0x17,   0xEF, 0x58, 0x66, 0xAC,
    0x0F, 0x31, 0x3C, 0x81,   0xD9, 0x3E, 0x24, 0x22,
    0x2F, 0x65, 0x0D, 0xA1,   0xB2, 0x02, 0x21, 0x00,
    0xF2, 0x2C, 0x5F, 0x1D,   0xDC, 0x04, 0x01, 0x3E,
    0xE0, 0x24, 0x93, 0x67,   0x93, 0x28, 0x65, 0xE3,
    0xEF, 0xA2, 0xC0, 0x0D,   0x02, 0xA7, 0xBD, 0x5A,
    0xAB, 0x6F, 0x09, 0xDB,   0x7A, 0xF3, 0xCB, 0xCE,
    0x00, 0x75, 0x00, 0xDD,   0xEB, 0x1D, 0x2B, 0x7A,
    0x0D, 0x4F, 0xA6, 0x20,   0x8B, 0x81, 0xAD, 0x81,
    0x68, 0x70, 0x7E, 0x2E,   0x8E, 0x9D, 0x01, 0xD5,
    0x5C, 0x88, 0x8D, 0x3D,   0x11, 0xC4, 0xCD, 0xB6,
    0xEC, 0xBE, 0xCC, 0x00,   0x00, 0x01, 0x5F, 0x9E,
    0x6C, 0x89, 0xBD, 0x00,   0x00, 0x04, 0x03, 0x00,
    0x46, 0x30, 0x44, 0x02,   0x20, 0x39, 0xF4, 0xBB,
    0x5B, 0xBB, 0x1C, 0x30,   0x64, 0xE9, 0x6D, 0xE3,
    0xF7, 0xF5, 0x71, 0x32,   0x98, 0x66, 0x28, 0xFF,
    0xCD, 0x5C, 0xCF, 0x20,   0x7F, 0x60, 0x0D, 0x9F,
    0x49, 0xB5, 0xBF, 0x3F,   0xDD, 0x02, 0x20, 0x04,
    0x4D, 0x28, 0xC3, 0x61,   0x81, 0x25, 0x1F, 0xF9,
    0xE1, 0xC1, 0xBD, 0x79,   0xBF, 0x25, 0xD7, 0x80,
    0xED, 0x44, 0xC8, 0xD2,   0x79, 0x64, 0x86, 0x4E,
    0x6D, 0x41, 0x53, 0x7A,   0x75, 0xD4, 0x60, 0x01,
    0x01, 0x03, 0x01, 0xE8,   0x81, 0x60, 0x92, 0x92,
    0x1A, 0xE8, 0x00, 0x00,   0x00, 0x00, 0x00, 0x50,
    0x08, 0x00, 0x00, 0x78,   0xBB, 0x81, 0x46, 0xC0,
    0x1F, 0x93, 0x61, 0x61,   0x00, 0x96, 0x5C, 0x40,
    0x5D, 0x4D, 0xCC, 0x0C,   0x90, 0x06, 0x15, 0x07,
    0xBF, 0xFB, 0xCA, 0x42,   0xD3, 0x0F, 0xB7, 0xD4,
    0x91, 0x8B, 0x23, 0x6E,   0x60, 0x71, 0xE4, 0x89,
    0x5A, 0x1A, 0x41, 0x13,   0x0C, 0x17, 0x30, 0xC1,
    0xE4, 0xE7, 0xA7, 0xE7,   0xA4, 0x82, 0xD2, 0xAB,
    0xA1, 0xAA, 0x81, 0x32,   0x24, 0x6D, 0xC8, 0xC0,
    0x05, 0x81, 0xCE, 0xCC,   0x4B, 0x2D, 0x41, 0x14,
    0x0E, 0x0A, 0xEE, 0x46,   0xE0, 0xC2, 0xC0, 0x1C,
    0x18, 0xF1, 0x96, 0x06,   0x06, 0xC6, 0xE6, 0xA6,
    0xC6, 0x90, 0x06, 0x95,   0x11, 0xB0, 0xB6, 0x35,
    0x30, 0x34, 0x02, 0x35,   0xA8, 0xB2, 0xB0, 0x5A,
    0xC5, 0xC1, 0xC3, 0xE5,   0x0C, 0x4C, 0x37, 0x69,
    0xF9, 0x45, 0x79, 0x99,   0x89, 0xB0, 0x04, 0xC9,
    0xCE, 0xC3, 0xEB, 0x9B,   0x5F, 0x9A, 0x57, 0x02,
    0x4A, 0x5D, 0x61, 0x99,   0xA9, 0xE5, 0x70, 0x77,
    0xF1, 0x20, 0xBB, 0x0B,   0x96, 0x66, 0x79, 0x04,
    0xB4, 0x80, 0x61, 0x0A,   0x12, 0x06, 0xC6, 0x6A,
    0x31, 0x38, 0x82, 0x23,   0x0D, 0x84, 0xD9, 0xD8,
    0x81, 0xFE, 0x3C, 0x67,   0x0B, 0xAC, 0xF9, 0x39,
    0xC0, 0x0C, 0x66, 0x46,   0x76, 0x66, 0x27, 0x06,
    0x96, 0xC3, 0xF2, 0xA7,   0x67, 0xF2, 0xC9, 0xB2,
    0x39, 0x69, 0x15, 0x24,   0x5F, 0x9C, 0xEC, 0xD9,
    0xB9, 0xF1, 0x7F, 0x86,   0xC1, 0x1A, 0x13, 0x17,
    0x11, 0xF7, 0xB4, 0xED,   0xEE, 0xD3, 0x14, 0x37,
    0xFE, 0x75, 0xAC, 0xFA,   0x7C, 0xD0, 0xF2, 0xB4,
    0xEA, 0xD5, 0x8E, 0x22,   0xB5, 0x53, 0xC1, 0xB3,
    0x2F, 0x2A, 0x35, 0x1F,   0x7C, 0xBE, 0x5E, 0xB7,
    0x7E, 0x51, 0x93, 0xCA,   0x0D, 0x5E, 0x45, 0xCF,
    0x17, 0x1E, 0x6F, 0xE5,   0x16, 0x37, 0x31, 0xAE,
    0x01, 0xD6, 0x0A, 0x2B,   0x80, 0x16, 0x80, 0x0B,
    0x31, 0x1E, 0x03, 0x2E,   0x44, 0x21, 0x86, 0x5A,
    0x74, 0xB1, 0x37, 0x18,   0x94, 0x80, 0xF8, 0x82,
    0x2C, 0xB9, 0x06, 0xD9,   0x4D, 0x18, 0x8E, 0x6C,
    0x12, 0xD5, 0xD2, 0x4B,   0xCE, 0xC9, 0x4C, 0xCD,
    0x2B, 0x29, 0x36, 0x83,   0x4A, 0x81, 0x85, 0x25,
    0x40, 0xC2, 0xF9, 0xA5,   0x29, 0xC0, 0xDA, 0xB4,
    0x20, 0x1F, 0x98, 0x22,   0x8A, 0xE1, 0x1A, 0xC4,
    0x70, 0x88, 0xF3, 0xA1,   0xF9, 0x3E, 0x03, 0x29,
    0xDD, 0xC6, 0x00, 0x43,   0x5E, 0x1B, 0x29, 0x45,
    0xCA, 0x43, 0x13, 0x49,   0x41, 0x76, 0x26, 0x92,
    0xA5, 0xFA, 0xEE, 0x9E,   0x8E, 0xEE, 0x46, 0xE0,
    0x24, 0xA7, 0x8D, 0x94,   0xC8, 0x61, 0x8A, 0xA1,
    0xCE, 0x34, 0x44, 0xD6,   0x01, 0x4A, 0xF8, 0x48,
    0xB5, 0xE0, 0xF9, 0x4B,   0x32, 0x29, 0xAF, 0x5E,
    0xCE, 0x58, 0x7F, 0x67,   0xBE, 0x76, 0x2C, 0xFF,
    0xD1, 0xD6, 0x77, 0x77,   0x6C, 0xCF, 0x4C, 0x45,
    0xAB, 0x09, 0x90, 0x13,   0xB3, 0xD7, 0x5D, 0x36,
    0x31, 0xE9, 0x3D, 0xDF,   0x32, 0xB6, 0x96, 0x7D,
    0x6D, 0xDC, 0xB6, 0x3B,   0x49, 0x6A, 0x57, 0x54,
    0xA3, 0xBE, 0x81, 0x22,   0xA4, 0x68, 0x05, 0xE6,
    0x6D, 0xA0, 0x4E, 0x2E,   0x70, 0x59, 0x75, 0xAD,
    0x92, 0x89, 0x95, 0xD1,   0x80, 0x83, 0x8D, 0x2D,
    0xBD, 0x91, 0x07, 0x98,   0x8E, 0x0D, 0x0C, 0x20,
    0x75, 0x81, 0xA6, 0x81,   0xBA, 0x81, 0xEA, 0x02,
    0xE5, 0x05, 0x8A, 0x84,   0xFC, 0x93, 0x83, 0x96,
    0xE0, 0xC1, 0xB5, 0x7E,   0xCD, 0x1D, 0x53, 0x33,
    0x86, 0xF9, 0x9F, 0x85,   0x8E, 0xBE, 0xFD, 0x27,
    0x75, 0xAD, 0x9A, 0x63,   0x9E, 0xFD, 0x84, 0x2E,
    0x65, 0x9E, 0x09, 0x21,   0xAF, 0xF4, 0x85, 0xA7,
    0x9D, 0x3A, 0x3E, 0x6D,   0x9D, 0xA6, 0xB2, 0x72,
    0xD6, 0x95, 0x54, 0xC6,   0xDA, 0x1F, 0x9E, 0x3A,
    0x15, 0xB6, 0x57, 0x77,   0x9C, 0x7F, 0xF5, 0xBA,
    0x32, 0xF6, 0xBB, 0x6B,   0xE2, 0xBA, 0xA7, 0x99,
    0x87, 0xFD, 0xB5, 0xD6,   0xF2, 0xA7, 0x07, 0xAC,
    0xE5, 0xCE, 0xF4, 0xDF,   0xA1, 0xFA, 0xBE, 0x40,
    0x6A, 0xDD, 0xF9, 0x33,   0x1D, 0x9D, 0x73, 0xEA,
    0x12, 0xD7, 0xBC, 0x71,   0xBB, 0x2F, 0x63, 0x97,
    0xF1, 0xFB, 0xC0, 0xC9,   0x13, 0xBF, 0x1A, 0x9F,
    0x48, 0x28, 0x0A, 0x14,   0xE6, 0x5A, 0xDF, 0x3D,
    0x93, 0xF3, 0xBF, 0xF5,   0xD9, 0xCA, 0xE4, 0xA5,
    0x8C, 0xF5, 0x1E, 0x76,   0x46, 0x26, 0x2A, 0x71,
    0x2C, 0xDC, 0xD7, 0x77,   0xA5, 0x73, 0x27, 0x5C,
    0xD8, 0x70, 0x50, 0x68,   0xD3, 0xA6, 0xEA, 0xC0,
    0x95, 0x67, 0x1C, 0xD2,   0x65, 0x1B, 0xF4, 0x92,
    0x0A, 0xBC, 0x02, 0x1F,   0xBC, 0xDB, 0xE9, 0x57,
    0xF1, 0x56, 0xC5, 0xBF,   0xEC, 0xD2, 0x5E, 0xF7,
    0x55, 0x49, 0xC2, 0x1E,   0xA7, 0x6C, 0x17, 0x35,
    0x68, 0x3F, 0x96, 0xED,   0xFC, 0x93, 0xFA, 0xFB,
    0xC7, 0x45, 0x56, 0xD1,   0x2D, 0xC7
};

int main() {
    TrueMan::crypto::hash::fnv128a::Ctx ctx;
    std::uint8_t val[TrueMan::crypto::hash::fnv128a::len_dgt];

    std::cout << "len_ctx=" << TrueMan::crypto::hash::fnv128a::op.len_ctx << std::endl;
    std::cout << "len_blk=" << TrueMan::crypto::hash::fnv128a::op.len_blk << std::endl;
    std::cout << "len_dgt=" << TrueMan::crypto::hash::fnv128a::op.len_dgt << std::endl;

    ctx.update(TST_req, 14)
       .update(TST_req + 26, sizeof(TST_req) - 26)
       .update("Client", 6)
       .final(val);

    TST_assert_eq(val[ 0], 0x44);
    TST_assert_eq(val[ 1], 0x5D);
    TST_assert_eq(val[ 2], 0xA8);
    TST_assert_eq(val[ 3], 0xD3);
    TST_assert_eq(val[ 4], 0xB9);
    TST_assert_eq(val[ 5], 0x88);
    TST_assert_eq(val[ 6], 0x78);
    TST_assert_eq(val[ 7], 0x4C);
    TST_assert_eq(val[ 8], 0x0A);
    TST_assert_eq(val[ 9], 0xCF);
    TST_assert_eq(val[10], 0x40);
    TST_assert_eq(val[11], 0x9B);

    ctx.update(TST_rsp, 10)
       .update(TST_rsp + 22, sizeof(TST_rsp) - 22)
       .update("Server", 6)
       .final(val);

    TST_assert_eq(val[ 0], 0xA3);
    TST_assert_eq(val[ 1], 0x71);
    TST_assert_eq(val[ 2], 0x5C);
    TST_assert_eq(val[ 3], 0xBB);
    TST_assert_eq(val[ 4], 0x79);
    TST_assert_eq(val[ 5], 0xE0);
    TST_assert_eq(val[ 6], 0xF8);
    TST_assert_eq(val[ 7], 0x5E);
    TST_assert_eq(val[ 8], 0x2C);
    TST_assert_eq(val[ 9], 0xA7);
    TST_assert_eq(val[10], 0xEC);
    TST_assert_eq(val[11], 0x45);

    std::cout << "OK " << '(' << __FUNCTION__ << ')' << std::endl;
    return(0);
}
