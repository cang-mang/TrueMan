use trueman_util_code::uintx::Code;
/*============================================================================*/
fn main() {
    let val_128 = 0x_12_34_56_78_90_AB_CD_EF_0A_1B_2C_3D_4E_5F_68_79_u128;
    let val_64  = val_128 as u64;
    let val_32  = val_64 as u32;
    let val_16  = val_32 as u16;
    let val_8   = val_16 as u8;

    let mut buf = [255_u8; 23];
    val_128.encode_be(&mut buf);
    println!("big endian encode u128: {:02X?}", buf);
    let mut val = 0_u128;
    val.decode_le(&buf);
    println!("little endian decode u128: 0x{:032X}", val);
    val_128.encode_le(&mut buf);
    println!("little endian encode u128: {:02X?}", buf);
    val = 0_u128;
    val.decode_be(&buf);
    println!("big endian decode u128: 0x{:032X}", val);
    println!("********************");
    val_64.encode_be(&mut buf);
    println!("big endian encode u64: {:02X?}", buf);
    let mut val = 0_u64;
    val.decode_le(&buf);
    println!("little endian decode u64: 0x{:016X}", val);
    val_64.encode_le(&mut buf);
    println!("little endian encode u64: {:02X?}", buf);
    val = 0_u64;
    val.decode_be(&buf);
    println!("big endian decode u64: 0x{:016X}", val);
    println!("********************");
    val_32.encode_be(&mut buf);
    println!("big endian encode u32: {:02X?}", buf);
    let mut val = 0_u32;
    val.decode_le(&buf);
    println!("little endian decode u32: 0x{:08X}", val);
    val_32.encode_le(&mut buf);
    println!("little endian encode u32: {:02X?}", buf);
    val = 0_u32;
    val.decode_be(&buf);
    println!("big endian decode u32: 0x{:08X}", val);
    println!("********************");
    val_16.encode_be(&mut buf);
    println!("big endian encode u16: {:02X?}", buf);
    let mut val = 0_u16;
    val.decode_le(&buf);
    println!("little endian decode u16: 0x{:04X}", val);
    val_16.encode_le(&mut buf);
    println!("little endian encode u16: {:02X?}", buf);
    val = 0_u16;
    val.decode_be(&buf);
    println!("big endian decode u16: 0x{:04X}", val);
    println!("********************");
    val_8.encode_be(&mut buf);
    println!("big endian encode u8: {:02X?}", buf);
    let mut val = 0_u8;
    val.decode_le(&buf);
    println!("little endian decode u8: 0x{:02X}", val);
    val_8.encode_le(&mut buf);
    println!("little endian encode u8: {:02X?}", buf);
    val = 0_u8;
    val.decode_be(&buf);
    println!("big endian decode u8: 0x{:02X}", val);

    println!("####################");

    let mut buf = [255_u8; 13];
    val_128.encode_be(&mut buf);
    println!("big endian encode u128: {:02X?}", buf);
    let mut val = 0_u128;
    val.decode_le(&buf);
    println!("little endian decode u128: 0x{:032X}", val);
    val_128.encode_le(&mut buf);
    println!("little endian encode u128: {:02X?}", buf);
    val = 0_u128;
    val.decode_be(&buf);
    println!("big endian decode u128: 0x{:032X}", val);
    println!("********************");
    val_64.encode_be(&mut buf);
    println!("big endian encode u64: {:02X?}", buf);
    let mut val = 0_u64;
    val.decode_le(&buf);
    println!("little endian decode u64: 0x{:016X}", val);
    val_64.encode_le(&mut buf);
    println!("little endian encode u64: {:02X?}", buf);
    val = 0_u64;
    val.decode_be(&buf);
    println!("big endian decode u64: 0x{:016X}", val);
    println!("********************");
    val_32.encode_be(&mut buf);
    println!("big endian encode u32: {:02X?}", buf);
    let mut val = 0_u32;
    val.decode_le(&buf);
    println!("little endian decode u32: 0x{:08X}", val);
    val_32.encode_le(&mut buf);
    println!("little endian encode u32: {:02X?}", buf);
    val = 0_u32;
    val.decode_be(&buf);
    println!("big endian decode u32: 0x{:08X}", val);
    println!("********************");
    val_16.encode_be(&mut buf);
    println!("big endian encode u16: {:02X?}", buf);
    let mut val = 0_u16;
    val.decode_le(&buf);
    println!("little endian decode u16: 0x{:04X}", val);
    val_16.encode_le(&mut buf);
    println!("little endian encode u16: {:02X?}", buf);
    val = 0_u16;
    val.decode_be(&buf);
    println!("big endian decode u16: 0x{:04X}", val);
    println!("********************");
    val_8.encode_be(&mut buf);
    println!("big endian encode u8: {:02X?}", buf);
    let mut val = 0_u8;
    val.decode_le(&buf);
    println!("little endian decode u8: 0x{:02X}", val);
    val_8.encode_le(&mut buf);
    println!("little endian encode u8: {:02X?}", buf);
    val = 0_u8;
    val.decode_be(&buf);
    println!("big endian decode u8: 0x{:02X}", val);

    println!("####################");

    let mut buf = [255_u8; 7];
    val_128.encode_be(&mut buf);
    println!("big endian encode u128: {:02X?}", buf);
    let mut val = 0_u128;
    val.decode_le(&buf);
    println!("little endian decode u128: 0x{:032X}", val);
    val_128.encode_le(&mut buf);
    println!("little endian encode u128: {:02X?}", buf);
    val = 0_u128;
    val.decode_be(&buf);
    println!("big endian decode u128: 0x{:032X}", val);
    println!("********************");
    val_64.encode_be(&mut buf);
    println!("big endian encode u64: {:02X?}", buf);
    let mut val = 0_u64;
    val.decode_le(&buf);
    println!("little endian decode u64: 0x{:016X}", val);
    val_64.encode_le(&mut buf);
    println!("little endian encode u64: {:02X?}", buf);
    val = 0_u64;
    val.decode_be(&buf);
    println!("big endian decode u64: 0x{:016X}", val);
    println!("********************");
    val_32.encode_be(&mut buf);
    println!("big endian encode u32: {:02X?}", buf);
    let mut val = 0_u32;
    val.decode_le(&buf);
    println!("little endian decode u32: 0x{:08X}", val);
    val_32.encode_le(&mut buf);
    println!("little endian encode u32: {:02X?}", buf);
    val = 0_u32;
    val.decode_be(&buf);
    println!("big endian decode u32: 0x{:08X}", val);
    println!("********************");
    val_16.encode_be(&mut buf);
    println!("big endian encode u16: {:02X?}", buf);
    let mut val = 0_u16;
    val.decode_le(&buf);
    println!("little endian decode u16: 0x{:04X}", val);
    val_16.encode_le(&mut buf);
    println!("little endian encode u16: {:02X?}", buf);
    val = 0_u16;
    val.decode_be(&buf);
    println!("big endian decode u16: 0x{:04X}", val);
    println!("********************");
    val_8.encode_be(&mut buf);
    println!("big endian encode u8: {:02X?}", buf);
    let mut val = 0_u8;
    val.decode_le(&buf);
    println!("little endian decode u8: 0x{:02X}", val);
    val_8.encode_le(&mut buf);
    println!("little endian encode u8: {:02X?}", buf);
    val = 0_u8;
    val.decode_be(&buf);
    println!("big endian decode u8: 0x{:02X}", val);

    println!("####################");

    let mut buf = [255_u8; 5];
    val_128.encode_be(&mut buf);
    println!("big endian encode u128: {:02X?}", buf);
    let mut val = 0_u128;
    val.decode_le(&buf);
    println!("little endian decode u128: 0x{:032X}", val);
    val_128.encode_le(&mut buf);
    println!("little endian encode u128: {:02X?}", buf);
    val = 0_u128;
    val.decode_be(&buf);
    println!("big endian decode u128: 0x{:032X}", val);
    println!("********************");
    val_64.encode_be(&mut buf);
    println!("big endian encode u64: {:02X?}", buf);
    let mut val = 0_u64;
    val.decode_le(&buf);
    println!("little endian decode u64: 0x{:016X}", val);
    val_64.encode_le(&mut buf);
    println!("little endian encode u64: {:02X?}", buf);
    val = 0_u64;
    val.decode_be(&buf);
    println!("big endian decode u64: 0x{:016X}", val);
    println!("********************");
    val_32.encode_be(&mut buf);
    println!("big endian encode u32: {:02X?}", buf);
    let mut val = 0_u32;
    val.decode_le(&buf);
    println!("little endian decode u32: 0x{:08X}", val);
    val_32.encode_le(&mut buf);
    println!("little endian encode u32: {:02X?}", buf);
    val = 0_u32;
    val.decode_be(&buf);
    println!("big endian decode u32: 0x{:08X}", val);
    println!("********************");
    val_16.encode_be(&mut buf);
    println!("big endian encode u16: {:02X?}", buf);
    let mut val = 0_u16;
    val.decode_le(&buf);
    println!("little endian decode u16: 0x{:04X}", val);
    val_16.encode_le(&mut buf);
    println!("little endian encode u16: {:02X?}", buf);
    val = 0_u16;
    val.decode_be(&buf);
    println!("big endian decode u16: 0x{:04X}", val);
    println!("********************");
    val_8.encode_be(&mut buf);
    println!("big endian encode u8: {:02X?}", buf);
    let mut val = 0_u8;
    val.decode_le(&buf);
    println!("little endian decode u8: 0x{:02X}", val);
    val_8.encode_le(&mut buf);
    println!("little endian encode u8: {:02X?}", buf);
    val = 0_u8;
    val.decode_be(&buf);
    println!("big endian decode u8: 0x{:02X}", val);

    println!("####################");

    let mut buf = [255_u8; 2];
    val_128.encode_be(&mut buf);
    println!("big endian encode u128: {:02X?}", buf);
    let mut val = 0_u128;
    val.decode_le(&buf);
    println!("little endian decode u128: 0x{:032X}", val);
    val_128.encode_le(&mut buf);
    println!("little endian encode u128: {:02X?}", buf);
    val = 0_u128;
    val.decode_be(&buf);
    println!("big endian decode u128: 0x{:032X}", val);
    println!("********************");
    val_64.encode_be(&mut buf);
    println!("big endian encode u64: {:02X?}", buf);
    let mut val = 0_u64;
    val.decode_le(&buf);
    println!("little endian decode u64: 0x{:016X}", val);
    val_64.encode_le(&mut buf);
    println!("little endian encode u64: {:02X?}", buf);
    val = 0_u64;
    val.decode_be(&buf);
    println!("big endian decode u64: 0x{:016X}", val);
    println!("********************");
    val_32.encode_be(&mut buf);
    println!("big endian encode u32: {:02X?}", buf);
    let mut val = 0_u32;
    val.decode_le(&buf);
    println!("little endian decode u32: 0x{:08X}", val);
    val_32.encode_le(&mut buf);
    println!("little endian encode u32: {:02X?}", buf);
    val = 0_u32;
    val.decode_be(&buf);
    println!("big endian decode u32: 0x{:08X}", val);
    println!("********************");
    val_16.encode_be(&mut buf);
    println!("big endian encode u16: {:02X?}", buf);
    let mut val = 0_u16;
    val.decode_le(&buf);
    println!("little endian decode u16: 0x{:04X}", val);
    val_16.encode_le(&mut buf);
    println!("little endian encode u16: {:02X?}", buf);
    val = 0_u16;
    val.decode_be(&buf);
    println!("big endian decode u16: 0x{:04X}", val);
    println!("********************");
    val_8.encode_be(&mut buf);
    println!("big endian encode u8: {:02X?}", buf);
    let mut val = 0_u8;
    val.decode_le(&buf);
    println!("little endian decode u8: 0x{:02X}", val);
    val_8.encode_le(&mut buf);
    println!("little endian encode u8: {:02X?}", buf);
    val = 0_u8;
    val.decode_be(&buf);
    println!("big endian decode u8: 0x{:02X}", val);

    println!("####################");

    let mut buf = [255_u8; 1];
    val_128.encode_be(&mut buf);
    println!("big endian encode u128: {:02X?}", buf);
    let mut val = 0_u128;
    val.decode_le(&buf);
    println!("little endian decode u128: 0x{:032X}", val);
    val_128.encode_le(&mut buf);
    println!("little endian encode u128: {:02X?}", buf);
    val = 0_u128;
    val.decode_be(&buf);
    println!("big endian decode u128: 0x{:032X}", val);
    println!("********************");
    val_64.encode_be(&mut buf);
    println!("big endian encode u64: {:02X?}", buf);
    let mut val = 0_u64;
    val.decode_le(&buf);
    println!("little endian decode u64: 0x{:016X}", val);
    val_64.encode_le(&mut buf);
    println!("little endian encode u64: {:02X?}", buf);
    val = 0_u64;
    val.decode_be(&buf);
    println!("big endian decode u64: 0x{:016X}", val);
    println!("********************");
    val_32.encode_be(&mut buf);
    println!("big endian encode u32: {:02X?}", buf);
    let mut val = 0_u32;
    val.decode_le(&buf);
    println!("little endian decode u32: 0x{:08X}", val);
    val_32.encode_le(&mut buf);
    println!("little endian encode u32: {:02X?}", buf);
    val = 0_u32;
    val.decode_be(&buf);
    println!("big endian decode u32: 0x{:08X}", val);
    println!("********************");
    val_16.encode_be(&mut buf);
    println!("big endian encode u16: {:02X?}", buf);
    let mut val = 0_u16;
    val.decode_le(&buf);
    println!("little endian decode u16: 0x{:04X}", val);
    val_16.encode_le(&mut buf);
    println!("little endian encode u16: {:02X?}", buf);
    val = 0_u16;
    val.decode_be(&buf);
    println!("big endian decode u16: 0x{:04X}", val);
    println!("********************");
    val_8.encode_be(&mut buf);
    println!("big endian encode u8: {:02X?}", buf);
    let mut val = 0_u8;
    val.decode_le(&buf);
    println!("little endian decode u8: 0x{:02X}", val);
    val_8.encode_le(&mut buf);
    println!("little endian encode u8: {:02X?}", buf);
    val = 0_u8;
    val.decode_be(&buf);
    println!("big endian decode u8: 0x{:02X}", val);
}
